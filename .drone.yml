---
kind: pipeline
type: docker
name: alpine

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    - refs/heads/master
    - refs/pull/*/head
    - refs/tags/*

services:
  - name: cache
    image: alpine
    commands:
        - apk add squid
        - echo "cache_dir aufs /var/cache/squid 20000 16 256" >> /etc/squid/squid.conf
        - echo "maximum_object_size 1024 MB" >> /etc/squid/squid.conf
        - squid -z -N
        - squid -N

steps:
  - name: wait cache
    image: alpine
    environment:
      http_proxy: http://cache:3128
    commands:
        - sh wait_proxy.sh

  - name: build custom pkg
    image: alpine
    environment:
      http_proxy: http://cache:3128
    commands:
      - apk add abuild
      - abuild-keygen -n -i -a
      - cd alpine-custom
      - abuild -c -k -F -r
      - cp /root/packages/src/x86_64/alpine-custom-*.apk ./
      - cp /root/.abuild/*.pub ./
    depends_on: ['wait cache']

  - name: build image virt
    image: alpine
    environment:
      http_proxy: http://cache:3128
    commands:
      - cp alpine-custom/*.pub /etc/apk/keys/
      - mkdir alpine-virt
      - apk add --root alpine-virt --repositories-file /etc/apk/repositories --keys-dir /etc/apk/keys --initramfs-diskless-boot alpine-custom/alpine-custom*.apk
      - apk add --root alpine-virt --repositories-file /etc/apk/repositories --keys-dir /etc/apk/keys --initramfs-diskless-boot --no-scripts linux-virt wireguard-virt
    depends_on: ['build custom pkg']

  - name: build image lts
    image: alpine
    environment:
      http_proxy: http://cache:3128
    commands:
      - cp alpine-custom/*.pub /etc/apk/keys/
      - mkdir alpine-lts
      - apk add --root alpine-lts --repositories-file /etc/apk/repositories --keys-dir /etc/apk/keys --initramfs-diskless-boot alpine-custom/alpine-custom*.apk
      - apk add --root alpine-lts --repositories-file /etc/apk/repositories --keys-dir /etc/apk/keys --initramfs-diskless-boot --no-scripts linux-lts wireguard-lts
    depends_on: ['build custom pkg']
  
  - name: clean
    image: alpine
    commands:
      - rm -Rf alpine-custom/*.pub
      - rm -Rf alpine-custom/*.apk
    depends_on: ['build image lts', 'build image virt']

  - name: publish
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      files: dist/*
      checksum:
        - md5
        - sha1
    when:
      event: [tag]
    depends_on: ['clean']
  
  - name: notify
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: telegram_token
      to: 205514323
    when:
      status: [ success, failure ]
      event: [tag]
    depends_on: ['publish']
